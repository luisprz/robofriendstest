{"ast":null,"code":"import React from'react';import Card from'./Card';/*\r\nconst Cardlist = ({robots}) => {\r\n    const cardsArray = robots.map((use, i) => {\r\n        return (<Card \r\n        key={robots[i].id} \r\n        id={robots[i].id} \r\n        username={robots[i].username} \r\n        email={robots[i].email}\r\n\r\n        />); //index.js:1 Warning: Each child in a list should have a unique \"key\" prop. Esto hace que al borrar algo solo se rendee esa parte y no toda la pagina\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;\r\n\r\n*/var Cardlist=function Cardlist(_ref){var robots=_ref.robots;return/*#__PURE__*/React.createElement(\"div\",null,robots.map(function(username,i){return/*#__PURE__*/React.createElement(Card,{key:robots[i].id,id:robots[i].id,username:robots[i].username,email:robots[i].email,name:robots[i].name});//index.js:1 Warning: Each child in a list should have a unique \"key\" prop. Esto hace que al borrar algo solo se rendee esa parte y no toda la pagina\n}));};export default Cardlist;","map":{"version":3,"sources":["C:/Tools/Programacion/robofriendstest/src/Cardlist.js"],"names":["React","Card","Cardlist","robots","map","username","i","id","email","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA;;;;;;;;;;;;;;;;;;;;;EAsBA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAC7B,mBACI,+BAEQA,MAAM,CAACC,GAAP,CAAW,SAACC,QAAD,CAAWC,CAAX,CAAiB,CACxB,mBACI,oBAAC,IAAD,EACI,GAAG,CAAEH,MAAM,CAACG,CAAD,CAAN,CAAUC,EADnB,CAEI,EAAE,CAAEJ,MAAM,CAACG,CAAD,CAAN,CAAUC,EAFlB,CAGI,QAAQ,CAAEJ,MAAM,CAACG,CAAD,CAAN,CAAUD,QAHxB,CAII,KAAK,CAAEF,MAAM,CAACG,CAAD,CAAN,CAAUE,KAJrB,CAKI,IAAI,CAAGL,MAAM,CAACG,CAAD,CAAN,CAAUG,IALrB,EADJ,CAQG;AACN,CAVD,CAFR,CADJ,CAiBH,CAlBD,CAoBA,cAAeP,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\n/*\r\nconst Cardlist = ({robots}) => {\r\n    const cardsArray = robots.map((use, i) => {\r\n        return (<Card \r\n        key={robots[i].id} \r\n        id={robots[i].id} \r\n        username={robots[i].username} \r\n        email={robots[i].email}\r\n\r\n        />); //index.js:1 Warning: Each child in a list should have a unique \"key\" prop. Esto hace que al borrar algo solo se rendee esa parte y no toda la pagina\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;\r\n\r\n*/\r\nconst Cardlist = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((username, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={robots[i].id}\r\n                            id={robots[i].id}\r\n                            username={robots[i].username}\r\n                            email={robots[i].email}\r\n                            name= {robots[i].name}\r\n                        />\r\n                    ); //index.js:1 Warning: Each child in a list should have a unique \"key\" prop. Esto hace que al borrar algo solo se rendee esa parte y no toda la pagina\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;\r\n"]},"metadata":{},"sourceType":"module"}